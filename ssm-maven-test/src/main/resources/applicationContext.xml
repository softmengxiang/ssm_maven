<?xml version="1.0" encoding="UTF-8"?>

<!-- spring的配置文件，这里主要配置和业务逻辑相关的内容 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 业务逻辑组件扫描，这里除了springmvc对应的controller之外的其他组件都需要 -->
	<context:component-scan base-package="com.maven.ssm">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 数据源连接配置 -->
	<!-- 添加dbconfig.properties文件，设置各个配置节点的值 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<!-- 具体连接配置和值的对应关系 -->
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 配置和mybatis的整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybaits的全局配置文件 -->
		<property name="configuration" value="classpath:mybatis-config.xml"></property>
		<!-- 指定数据库的数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 配 置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.maven.ssm.dao"></property>
	</bean>

	<!-- 事务控制的配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>

	<!-- 开启基于注释的事务，使用xml配置形式的事务（推荐使用配置的方式） -->
	<aop:config>
		<!-- 切入表达式（所有返回值类型的service包下或者子包下的所有类中任意多的参数的方法都可以切入） -->
		<aop:pointcut expression="execution(* com.maven.ssm.service..*(..))"
			id="txPoint" />
		<!-- 指定事务增强的规则 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 表示所有方法都是事务方法 -->
			<tx:method name="*" />
			<!-- 以get开始的方法都是事务方法 -->
			<tx:method name="get" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>